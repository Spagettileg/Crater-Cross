{"ast":null,"code":"import _slicedToArray from\"/home/ubuntu/environment/Crater-Cross/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/home/ubuntu/environment/Crater-Cross/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ubuntu/environment/Crater-Cross/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ubuntu/environment/Crater-Cross/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ubuntu/environment/Crater-Cross/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ReactDOM from'react-dom';import'./index.css';// Configure a square function component\nfunction Square(props){return/*#__PURE__*/React.createElement(\"button\",{className:\"square\",\"game-id\":props.value,onClick:props.onClick},props.value);}// Create gaming board. Squares based on index scoring from 0 to 8\nvar Board=/*#__PURE__*/function(_React$Component){_inherits(Board,_React$Component);var _super=_createSuper(Board);function Board(){_classCallCheck(this,Board);return _super.apply(this,arguments);}_createClass(Board,[{key:\"renderSquare\",// Returned element is split for readability. Parentheses added so JS\n// doesn't insert a semicolon after return and break the code.\nvalue:function renderSquare(i){var _this=this;return/*#__PURE__*/React.createElement(Square,{value:this.props.squares[i],onClick:function onClick(){return _this.props.onClick(i);}});}// Text produced to confirm the Crater-Cross champion\n},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"board-row\"},this.renderSquare(0),this.renderSquare(1),this.renderSquare(2)),/*#__PURE__*/React.createElement(\"div\",{className:\"board-row\"},this.renderSquare(3),this.renderSquare(4),this.renderSquare(5)),/*#__PURE__*/React.createElement(\"div\",{className:\"board-row\"},this.renderSquare(6),this.renderSquare(7),this.renderSquare(8)));}}]);return Board;}(React.Component);// Game status and user information\nvar Game=/*#__PURE__*/function(_React$Component2){_inherits(Game,_React$Component2);var _super2=_createSuper(Game);function Game(props){var _this2;_classCallCheck(this,Game);_this2=_super2.call(this,props);_this2.state={history:[{squares:Array(9).fill(null)}],stepNumber:0,xIsNext:true,isDescending:true};return _this2;}// Incidence of 'X' & 'O' and xIsNext boolean allows for player turns\n// Location of users sqaure selection captured as (col / row) array \n_createClass(Game,[{key:\"handleClick\",value:function handleClick(i){var locations=[[1,1],[2,1],[3,1],[1,2],[2,2],[3,2],[1,3],[2,3],[3,3]];var history=this.state.history.slice(0,this.state.stepNumber+1);var current=history[history.length-1];var squares=current.squares.slice();// function returns early if game won or Square already filled \nif(calculateWinner(squares)||squares[i]){return;}squares[i]=this.state.xIsNext?'X':'O';this.setState({history:history.concat([{squares:squares,location:locations[i]}]),stepNumber:history.length,xIsNext:!this.state.xIsNext});}},{key:\"jumpTo\",value:function jumpTo(step){this.setState({stepNumber:step,xIsNext:step%2===0});}},{key:\"sortHistory\",value:function sortHistory(){this.setState({isDescending:!this.state.isDescending});}},{key:\"render\",value:function render(){var _this3=this;var history=this.state.history;var current=history[this.state.stepNumber];var winner=calculateWinner(current.squares);var moves=history.map(function(step,move){var desc=move?'Go to move #'+move+\" >> \"+history[move].location:'Go to game start';return/*#__PURE__*/React.createElement(\"li\",{key:move},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.jumpTo(move);}},move===_this3.state.stepNumber?/*#__PURE__*/React.createElement(\"i\",null,desc):desc));});// No null (blank) squares = draw outcome\n// Null squares = Game has been won, as an outcome\nvar status;if(winner){status='Winner: Player '+winner;}else if(!current.squares.includes(null)){status='Game Drawn';}else{status='Next player: '+(this.state.xIsNext?'X':'O');}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game-board\"},/*#__PURE__*/React.createElement(Board,{squares:current.squares,onClick:function onClick(i){return _this3.handleClick(i);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"reset\"},/*#__PURE__*/React.createElement(\"a\",{href:\"index.html\",className:\"reset-button\"},\"Reset\")),/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game-info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game-status\"},status),/*#__PURE__*/React.createElement(\"ol\",null,this.state.isDescending?moves:moves.reverse()),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.sortHistory();}},\"Sort by: \",this.state.isDescending?\"Descending\":\"Ascending\"))));}}]);return Game;}(React.Component);// ========================================\nReactDOM.render(/*#__PURE__*/React.createElement(Game,null),document.getElementById('root'));// Winning combinations built with use of index scoring\nfunction calculateWinner(squares){var lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(var i=0;i<lines.length;i++){var _lines$i=_slicedToArray(lines[i],3),a=_lines$i[0],b=_lines$i[1],c=_lines$i[2];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){return squares[a];}}return null;}","map":{"version":3,"sources":["/home/ubuntu/environment/Crater-Cross/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","value","onClick","Board","i","squares","renderSquare","Component","Game","state","history","Array","fill","stepNumber","xIsNext","isDescending","locations","slice","current","length","calculateWinner","setState","concat","location","step","winner","moves","map","move","desc","jumpTo","status","includes","handleClick","reverse","sortHistory","render","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Configure a square function component\n\nfunction Square(props) {\n    return (\n      <button\n        className=\"square\"\n        game-id={props.value}\n        onClick={props.onClick}\n        >\n        {props.value}\n      </button>\n    );\n  }\n\n\n// Create gaming board. Squares based on index scoring from 0 to 8\n\nclass Board extends React.Component {\n  \n  // Returned element is split for readability. Parentheses added so JS\n  // doesn't insert a semicolon after return and break the code.\n  renderSquare(i) {\n    return ( \n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  // Text produced to confirm the Crater-Cross champion\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\n// Game status and user information\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isDescending: true\n    };\n  }\n  \n  // Incidence of 'X' & 'O' and xIsNext boolean allows for player turns\n  // Location of users sqaure selection captured as (col / row) array \n  handleClick(i) {\n    const locations = [\n      [1, 1],\n      [2, 1],\n      [3, 1],\n      [1, 2],\n      [2, 2],\n      [3, 2],\n      [1, 3],\n      [2, 3],\n      [3, 3],\n    ];\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    // function returns early if game won or Square already filled \n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        location: locations[i]\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n  \n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n  \n  sortHistory() {\n    this.setState({\n      isDescending: !this.state.isDescending\n    });\n  }\n  \n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    \n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move + \" >> \" + history[move].location :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n          {move === this.state.stepNumber ? <i>{desc}</i> : desc}\n          </button>\n        </li>\n        );\n    });\n    \n    // No null (blank) squares = draw outcome\n    // Null squares = Game has been won, as an outcome\n    let status;\n    if (winner) {\n      status = 'Winner: Player ' + winner;\n    } else if (!current.squares.includes(null)) {\n      status = 'Game Drawn';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    \n    return (\n      <div>\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n      </div>\n      <div className=\"reset\">\n        <a href=\"index.html\" className=\"reset-button\">Reset</a>\n      </div>\n      <div className=\"game\">\n        <div className=\"game-info\">\n            <div className=\"game-status\">{status}</div>\n            <ol>{this.state.isDescending ? moves : moves.reverse()}</ol>\n            <button onClick={() => this.sortHistory()}>\n              Sort by: {this.state.isDescending ? \"Descending\" : \"Ascending\"}\n            </button>\n          </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n// Winning combinations built with use of index scoring\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}